name: 'Main Pipeline'
on:
  push:
    branches:
      - aliaa
env:
  PROJECT_NAME: ""
  DEVOPS_IMAGE: "devops-image-poc"
  CLUSTER: ""
  LOCATION: ""
  valuesFile: chart/values.yaml
  chartName: "devops-poc"
  t4hHelmRepoUri: ""
  CHART_VERSION: "1.0.0"
  deployNamespace1: "poc1"
  deployNamespace2: "poc2"
  GCLOUD_SERVICE_KEY: ""
jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: tenhaus/get-release-or-tag@v2
        id: tag

      - uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          registry: us.gcr.io
          project_id: ${{env.PROJECT_NAME}}
          image_name: ${{env.DEVOPS_IMAGE}}
          image_tag: latest,${{ steps.tag.outputs.tag }}
          dockerfile: ./docker/Dockerfile
          context: ./docker

  deploy:
   runs-on: ubuntu-22.04
   needs: build-and-push-image
   steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: connect to gcp cluster
        run: |
           sudo apt update
           sudo apt-get install apt-transport-https ca-certificates gnupg -y
           echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
           curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
           sudo apt-get update -y
           sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin -y
           echo ${{ secrets.GCLOUD_SERVICE_KEY }} | base64 -d > ${HOME}/gcloud-service-key.json 
           gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
           gcloud config set project $PROJECT_NAME
           gcloud container clusters get-credentials $CLUSTER --zone=$LOCATION  #connect to the cluster 

           
           helm repo add t4h $t4hHelmRepoUri
           helm repo update
           
           cat ${valuesFile} | envsubst | helm upgrade ${chartName} t4h/${chartName} --version 1.0.0 -i -f - --namespace=${deployNamespace1} --create-namespace
           cat ${valuesFile} | envsubst | helm upgrade ${chartName} t4h/${chartName} --version 1.0.0 -i -f - --set url=devops-nginx2.tech4health.io --namespace=${deployNamespace2} --create-namespace